
model Channel {
	id			Int	@id @default(autoincrement())
	name		String		@unique
	password	String?
	public		Boolean		@default(true)
	created_at	DateTime	@default(now())
	update_at 	DateTime	@updatedAt @default(now())

	channelUser		ChannelUser[]
	@@map("channels")
}

model ChannelUser {
	user_id		Int
	channel_id	Int
	is_muted	DateTime?
	is_owner	Boolean	@default(false)
	is_admin	Boolean	@default(false)
	is_ban		Boolean	@default(false)
	channelMessage	ChannelMessage[]

	user		User		@relation(fields: [user_id], references: [id], onDelete: Cascade)
	channel		Channel		@relation(fields: [channel_id], references: [id], onDelete: Cascade)

	@@id([user_id, channel_id])
	@@map("channel_users")
}

model ChannelMessage {
	id			Int			@id @default(autoincrement())
	user_id		Int
	channel_id	Int
	content		String
	created_at	DateTime	@default(now())
	user		ChannelUser @relation(fields: [user_id, channel_id], references: [user_id, channel_id], onDelete: Cascade)

	@@map("channel_messages")
}
