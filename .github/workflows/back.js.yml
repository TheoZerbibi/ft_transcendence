# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Backend CI

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - '**backend'
      - 'backend**'
      - '**backend**'
  pull_request:
    branches:
      - 'master'
      - 'develop'
      - '**backend'
      - 'backend**'
      - '**backend**'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'back'
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Launch linter
        run: pnpm lint
      - name: Build dependencies
        run: pnpm build
    env:
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      POSTGRES_ENABLED: true
      DATABASE_URL: "postgresql://${{ vars.POSTGRES_USER }}:${{ vars.POSTGRES_PASSWORD }}@localhost:5432/${{ vars.POSTGRES_DB }}?schema=public"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASS: ${{ vars.REDIS_PASSWORD }}
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
      API42_UID: ${{ secrets.API42_UID }}
      API42_SECRET: ${{ secrets.API42_SECRET }}
      HOST: localhost

